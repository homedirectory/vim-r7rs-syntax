#!/usr/bin/env bash

set -euo pipefail

show_usage() {
    echo " Usage: $0 (data|macro|syntax) [ARG...]" >&2
}

check_gauche_doc() {
    if [ -z "$GAUCHE_DOC" ]; then
        echo "Please set GAUCHE_DOC to gauche doc path (*.texi are there)" >&2
        exit 1
    fi
}

check_vim_runtime() {
    if [ -z "$VIM_RUNTIME" ]; then
        echo "Please set VIM_RUNTIME to vim runtime path" >&2
        exit 1
    fi
}

build_data() {
    check_gauche_doc

    set +o pipefail
    fd . -e texi "$GAUCHE_DOC" -x grep '^@def' '{}' \
        | sort \
        | uniq
    set -o pipefail
}

build_macro() {
    check_vim_runtime

    if [ -z "${1+defined}" ]; then
        echo " Usage: $0 macro FILE, where FILE is generated by $0 data" >&2
        exit 1
    fi

    awk '/^@defmac/ { print $2 }' "$1" | while read -r mac; do
        if [ "$mac" = '^c' ]; then
            # ^c where c is one of [_a-z] is a macro in gauche
            echo "syn match schemeSyntax /\^[_a-z]/"
        elif ! grep "syn keyword schemeSyntax $mac" \
            "$VIM_RUNTIME"/syntax/scheme.vim > /dev/null 2>&1
        then
            echo "syn keyword schemeSyntax $mac"
        fi
    done
}

build_syntax() {
    if [ "$#" -eq 0 ]; then
        echo " Usage: $0 syntax [FILE...], where FILE is generated by $0 macro etc." >&2
        exit 1
    fi

    echo "\
\" Vim syntax file
\" Language: Scheme (Gauche)
\" Last Change: $(date +"%Y-%m-%d")
\" Author: Mitsuhiro Nakamura <m.nacamura@gmail.com>
\" URL: https://github.com/mnacamura/vim-gauche-syntax
\" Notes: To enable this plugin, set filetype=scheme and (b|g):is_gauche=1.

if !exists('b:did_scheme_syntax')
  finish
endif
"

    for file in "$@"; do
        cat "$file"
    done
}

if [ -z "${1+defined}" ]; then
    show_usage
    exit 1
fi

case "$1" in
    data)
        build_data
        ;;
    macro)
        shift
        build_macro "$@"
        ;;
    syntax)
        shift
        build_syntax "$@"
        ;;
    *)
        show_usage
        exit 1
        ;;
esac
