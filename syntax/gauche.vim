" Vim syntax file
" Language: Scheme (Gauche)
" Last Change: 2020-05-20
" Author: Mitsuhiro Nakamura <m.nacamura@gmail.com>
" URL: https://github.com/mnacamura/vim-gauche-syntax
" Notes: To enable this plugin, set filetype=scheme and (b|g):is_gauche=1.

if !exists('b:did_scheme_syntax')
  finish
endif

syn keyword schemeSyntax $
syn match schemeSyntax /\^[_a-z]/
syn keyword schemeSyntax address-family
syn keyword schemeSyntax address-info
syn keyword schemeSyntax and-let*
syn keyword schemeSyntax and-let1
syn keyword schemeSyntax any?-ec
syn keyword schemeSyntax append-ec
syn keyword schemeSyntax apropos
syn keyword schemeSyntax assume
syn keyword schemeSyntax assume-type
syn keyword schemeSyntax autoload
syn keyword schemeSyntax begin0
syn keyword schemeSyntax cgen-with-cpp-condition
syn keyword schemeSyntax chibi-test
syn keyword schemeSyntax cond-expand
syn keyword schemeSyntax cond-list
syn keyword schemeSyntax condition
syn keyword schemeSyntax cut
syn keyword schemeSyntax debug-funcall
syn keyword schemeSyntax debug-print
syn keyword schemeSyntax define-cise-macro
syn keyword schemeSyntax define-cise-stmt
syn keyword schemeSyntax define-class
syn keyword schemeSyntax define-condition-type
syn keyword schemeSyntax define-dict-interface
syn keyword schemeSyntax define-generic
syn keyword schemeSyntax define-library
syn keyword schemeSyntax define-method
syn keyword schemeSyntax define-stream
syn keyword schemeSyntax do-ec
syn keyword schemeSyntax do-generator
syn keyword schemeSyntax dotimes
syn keyword schemeSyntax dynamic-lambda
syn keyword schemeSyntax ecase
syn keyword schemeSyntax endianness
syn keyword schemeSyntax extend
syn keyword schemeSyntax first-ec
syn keyword schemeSyntax fluid-let
syn keyword schemeSyntax fold-ec
syn keyword schemeSyntax get-keyword*
syn keyword schemeSyntax get-optional
syn keyword schemeSyntax glet*
syn keyword schemeSyntax glet1
syn keyword schemeSyntax if-let1
syn keyword schemeSyntax if3
syn keyword schemeSyntax if=?
syn keyword schemeSyntax inc!
syn keyword schemeSyntax ip-protocol
syn keyword schemeSyntax lcons
syn keyword schemeSyntax lcons*
syn keyword schemeSyntax let-args
syn keyword schemeSyntax let-keywords
syn keyword schemeSyntax let-keywords*
syn keyword schemeSyntax let-optionals*
syn keyword schemeSyntax let-string-start+end
syn keyword schemeSyntax let/cc
syn keyword schemeSyntax let1
syn keyword schemeSyntax list-ec
syn keyword schemeSyntax make-option-parser
syn keyword schemeSyntax match
syn keyword schemeSyntax match-define
syn keyword schemeSyntax match-lambda
syn keyword schemeSyntax match-lambda*
syn keyword schemeSyntax match-let
syn keyword schemeSyntax match-let1
syn keyword schemeSyntax message-type
syn keyword schemeSyntax min-ec
syn keyword schemeSyntax parse-options
syn keyword schemeSyntax pop!
syn keyword schemeSyntax push!
syn keyword schemeSyntax quasirename
syn keyword schemeSyntax rec
syn keyword schemeSyntax require-extension
syn keyword schemeSyntax reset
syn keyword schemeSyntax rlet1
syn keyword schemeSyntax rx
syn keyword schemeSyntax rxmatch-case
syn keyword schemeSyntax rxmatch-cond
syn keyword schemeSyntax rxmatch-if
syn keyword schemeSyntax rxmatch-let
syn keyword schemeSyntax set!-values
syn keyword schemeSyntax shift
syn keyword schemeSyntax shutdown-method
syn keyword schemeSyntax socket-domain
syn keyword schemeSyntax ssax:make-elem-parser
syn keyword schemeSyntax ssax:make-parser
syn keyword schemeSyntax ssax:make-pi-parser
syn keyword schemeSyntax stream
syn keyword schemeSyntax stream+
syn keyword schemeSyntax stream-cons
syn keyword schemeSyntax stream-delay
syn keyword schemeSyntax stream-lambda
syn keyword schemeSyntax stream-let
syn keyword schemeSyntax stream-match
syn keyword schemeSyntax stream-of
syn keyword schemeSyntax string-ec
syn keyword schemeSyntax sum-ec
syn keyword schemeSyntax syntax-error
syn keyword schemeSyntax test*
syn keyword schemeSyntax time
syn keyword schemeSyntax until
syn keyword schemeSyntax unwind-protect
syn keyword schemeSyntax update!
syn keyword schemeSyntax use
syn keyword schemeSyntax values->list
syn keyword schemeSyntax values-ref
syn keyword schemeSyntax vector-ec
syn keyword schemeSyntax vector-of-length-ec
syn keyword schemeSyntax while
syn keyword schemeSyntax with-builder
syn keyword schemeSyntax with-iterator
syn keyword schemeSyntax with-signal-handlers
syn keyword schemeSyntax with-time-counter
syn keyword schemeSyntax xml-token-kind
syn keyword schemeSyntax cute
syn keyword schemeSyntax dec!
syn keyword schemeSyntax define-cise-expr
syn keyword schemeSyntax define-cise-macro
syn keyword schemeSyntax define-cise-toplevel
syn keyword schemeSyntax dolist
syn keyword schemeSyntax every?-ec
syn keyword schemeSyntax fold3-ec
syn keyword schemeSyntax if-let1
syn keyword schemeSyntax if-not=?
syn keyword schemeSyntax if<=?
syn keyword schemeSyntax if<?
syn keyword schemeSyntax if>=?
syn keyword schemeSyntax if>?
syn keyword schemeSyntax last-ec
syn keyword schemeSyntax let-keywords
syn keyword schemeSyntax let-keywords*
syn keyword schemeSyntax let-optionals*
syn keyword schemeSyntax llist*
syn keyword schemeSyntax match-let
syn keyword schemeSyntax match-let*
syn keyword schemeSyntax match-letrec
syn keyword schemeSyntax max-ec
syn keyword schemeSyntax product-ec
syn keyword schemeSyntax rec
syn keyword schemeSyntax string-append-ec
syn keyword schemeSyntax syntax-errorf
syn keyword schemeSyntax until
syn keyword schemeSyntax while
syn keyword schemeSyntax while
syn keyword schemeSyntax xml-token-head

syn keyword schemeSpecialSyntax %macroexpand
syn keyword schemeSpecialSyntax add-load-path
syn keyword schemeSpecialSyntax and
syn keyword schemeSpecialSyntax begin
syn keyword schemeSpecialSyntax case
syn keyword schemeSpecialSyntax cond
syn keyword schemeSpecialSyntax current-module
syn keyword schemeSpecialSyntax define
syn keyword schemeSpecialSyntax define-constant
syn keyword schemeSpecialSyntax define-in-module
syn keyword schemeSpecialSyntax define-inline
syn keyword schemeSpecialSyntax define-macro
syn keyword schemeSpecialSyntax define-module
syn keyword schemeSpecialSyntax define-syntax
syn keyword schemeSpecialSyntax delay
syn keyword schemeSpecialSyntax delay-force
syn keyword schemeSpecialSyntax do
syn keyword schemeSpecialSyntax er-macro-transformer
syn keyword schemeSpecialSyntax export
syn keyword schemeSpecialSyntax export-all
syn keyword schemeSpecialSyntax if
syn keyword schemeSpecialSyntax import
syn keyword schemeSpecialSyntax include
syn keyword schemeSpecialSyntax lambda
syn keyword schemeSpecialSyntax let
syn keyword schemeSpecialSyntax let
syn keyword schemeSpecialSyntax let-syntax
syn keyword schemeSpecialSyntax or
syn keyword schemeSpecialSyntax quasiquote
syn keyword schemeSpecialSyntax quote
syn keyword schemeSpecialSyntax receive
syn keyword schemeSpecialSyntax require
syn keyword schemeSpecialSyntax select-module
syn keyword schemeSpecialSyntax set!
syn keyword schemeSpecialSyntax syntax-rules
syn keyword schemeSpecialSyntax unquote
syn keyword schemeSpecialSyntax when
syn keyword schemeSpecialSyntax with-cf-subst
syn keyword schemeSpecialSyntax with-module
syn keyword schemeSpecialSyntax %macroexpand-1
syn keyword schemeSpecialSyntax ^
syn keyword schemeSpecialSyntax define
syn keyword schemeSpecialSyntax define
syn keyword schemeSpecialSyntax define-constant
syn keyword schemeSpecialSyntax define-in-module
syn keyword schemeSpecialSyntax define-inline
syn keyword schemeSpecialSyntax define-macro
syn keyword schemeSpecialSyntax if
syn keyword schemeSpecialSyntax include-ci
syn keyword schemeSpecialSyntax lazy
syn keyword schemeSpecialSyntax let*
syn keyword schemeSpecialSyntax letrec
syn keyword schemeSpecialSyntax letrec*
syn keyword schemeSpecialSyntax letrec-syntax
syn keyword schemeSpecialSyntax set!
syn keyword schemeSpecialSyntax syntax-rules
syn keyword schemeSpecialSyntax unless
syn keyword schemeSpecialSyntax unquote-splicing
